# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Position {
  id: Int!
  position_title: String!
  department: Department!
}

type Department {
  id: Int!
  department_name: String!
}

type Attendance {
  id: Int!
  date: DateTime!
  check_in_time: String!
  check_out_time: String!
  status: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Payroll {
  id: Int!
  pay_date: DateTime!
  base_salary: Float!
  bonuses: Float!
  deductions: Float!
  net_salary: Float!
}

type Employee {
  id: Int!
  first_name: String!
  last_name: String!
  date_of_birth: DateTime!
  address: String!
  phone_number: String!
  date_hired: DateTime!
  salary: Float!
  department: Department!
  position: Position!
}

type PerformanceReview {
  id: Int!
  review_date: DateTime!
  performance_score: Int!
  comments: String!
}

type Admin {
  id: Int!
  admin_level: Int!
}

type User {
  id: Int!
  email: String!
  password: String!
  role: String!
}

type Query {
  users: [User!]!
  user(id: Int!): User!
  getEmployees: [Employee!]!
  getEmployee(id: Int!): Employee!
  departments: [Department!]!
  department(id: Int!): Department!
  positions: [Position!]!
  position(id: Int!): Position!
  admins: [Admin!]!
  admin(id: Int!): [Admin!]!
  Attendances: [Attendance!]!
  Attendance(id: Int!): Attendance!
  payrolls: [Payroll!]!
  payroll(id: Int!): Payroll!
  PerformanceReviews: [PerformanceReview!]!
  performanceReview: PerformanceReview!
}

type Mutation {
  createUser(createUserInput: CreateUserDto!): User!
  updateUser(id: Int!, updateUserInput: UpdateUserDto!): User!
  deleteUser(id: Int!): Boolean!
  createEmployee(createEmployeeInput: CreateEmployeeDto!): Employee!
  updateEmployee(id: Int!, updateEmployeeInput: UpdateEmployeeDto!): Employee!
  deleteEmployee(id: Int!): Boolean!
  createDepartment(createDepartmentInput: DepartmentDto!): Department!
  updateDepartment(id: Int!, updateDepartmentInput: DepartmentDto!): Department!
  deleteDepartment(id: Int!): Boolean!
  createPosition(createPositionInput: PositionDto!): Position!
  updatePosition(id: Int!, updatePositionInput: PositionDto!): Position!
  deletePosition(id: Int!): Boolean!
  createAdmin(createAdminInput: AdminDto!): Admin!
  updateAdmin(id: Int!, updatePositionInput: AdminDto!): Admin!
  deleteAdmin(id: Int!): Boolean!
  createAttendance(createAttendanceInput: AttendanceDto!): Attendance!
  updateAttendance(id: Int!, updateAttendanceInput: AttendanceDto!): Attendance!
  deleteAttendance(id: Int!): Boolean!
  createPayroll(createPayrollInput: PayrollDto!): Payroll!
  updatePayroll(id: Int!, updatePayrollInput: PayrollDto!): Payroll!
  deletePayroll(id: Int!): Boolean!
  cretePerformanceReview(createPerformanceReviewInput: PerformanceReviewDto!): PerformanceReview!
  updatePerformanceReview(id: Int!, updatePerformanceReviewInput: PerformanceReviewDto!): PerformanceReview!
  deletePerformanceReview(id: Int!): Boolean!
}

input CreateUserDto {
  email: String!
  password: String!
  role: String!
}

input UpdateUserDto {
  email: String
  password: String
  role: String
}

input CreateEmployeeDto {
  first_name: String!
  last_name: String!
  date_of_birth: DateTime!
  address: String!
  phone_number: String!
  date_hired: DateTime!
  salary: Float!
  department_id: Int!
  position_id: Int!
}

input UpdateEmployeeDto {
  first_name: String!
  last_name: String!
  date_of_birth: DateTime!
  address: String!
  phone_number: String!
  date_hired: DateTime!
  salary: Float!
  department_id: Int!
  position_id: Int!
}

input DepartmentDto {
  department_name: String!
}

input PositionDto {
  position_title: String!
  department_id: Int!
}

input AdminDto {
  admin_level: Float!
  user_id: Int!
}

input AttendanceDto {
  date: DateTime!
  employee_id: Int!
  check_in_time: String!
  check_out_time: String!
  status: String!
}

input PayrollDto {
  employee_id: Float!
  pay_date: DateTime!
  base_salary: Float!
  bonuses: Float!
  deductions: Float!
}

input PerformanceReviewDto {
  employee_id: Float!
  admin_id: Int!
  review_date: DateTime!
  performance_score: Float!
  comments: String!
}